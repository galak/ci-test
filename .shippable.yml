language: c

compiler: gcc

env:
    global:
        - SDK=0.9.1
        - SANITYCHECK_OPTIONS=" --inline-logs -R"
        - SANITYCHECK_OPTIONS_RETRY=" --inline-logs --only-failed --outdir=out-2nd-pass"
        - ZEPHYR_SDK_INSTALL_DIR=/opt/sdk/zephyr-sdk-0.9.1
        - ZEPHYR_GCC_VARIANT=zephyr
        - USE_CCACHE=1
        - COVERAGE="--all --enable-slow"
        - MATRIX_BUILDS="6"
        - QEMU_BIN_PATH=${ZEPHYR_SDK_INSTALL_DIR}/sysroots/x86_64-pokysdk-linux/usr/bin/
        - QEMU_BIOS=${ZEPHYR_SDK_INSTALL_DIR}/sysroots/x86_64-pokysdk-linux/usr/share/qemu
    matrix:
        - MATRIX_BUILD="1"
        - MATRIX_BUILD="2"
        - MATRIX_BUILD="3"
        - MATRIX_BUILD="4"
        - MATRIX_BUILD="5"
        - MATRIX_BUILD="6"

build:
    cache: true
    cache_dir_list:
        - ${SHIPPABLE_BUILD_DIR}/ccache
    pre_ci_boot:
        image_name: zephyrprojectrtos/ci
        image_tag: master.22
        pull: true
        options: "-e HOME=/home/buildslave --privileged=true --tty --net=bridge --user buildslave"

    ci:
      - export CCACHE_DIR=${SHIPPABLE_BUILD_DIR}/ccache/.ccache
      - git submodule update --remote
      - cd zephyr
      - source zephyr-env.sh
      - ccache -c -s --max-size=5000M
      - make host-tools
      - export PREBUILT_HOST_TOOLS=${ZEPHYR_BASE}/bin
      - >
          if [ "$JOB_TRIGGERED_BY_NAME" = "undefined" ]; then
            LOG_TYPE="manual";
          else
            LOG_TYPE=${JOB_TRIGGERED_BY_NAME};
          fi;

          S3_PATH="s3://zephyr-logs/${LOG_TYPE}/${REPO_FULL_NAME}/${BUILD_NUMBER}";
      - >
          if [ "$JOB_TRIGGERED_BY_NAME" = "daily-verify" ]; then
            echo "- Building with -R --all --enable-slow";
            COVERAGE="--all --enable-slow";
          fi;
          if [ "$JOB_TRIGGERED_BY_NAME" = "daily-verify-issm" ]; then
            echo "- Building with ISSM";
            export ISSM_INSTALLATION_PATH=/opt/toolchain/issm
            export ZEPHYR_GCC_VARIANT=issm
          elif [ "$JOB_TRIGGERED_BY_NAME" = "daily-verify-arm" ]; then
            echo "- Building with ARM cross toolchain";
            export GCCARMEMB_TOOLCHAIN_PATH=/opt/toolchain/arm-none-eabi
            export ZEPHYR_GCC_VARIANT=gccarmemb
          fi;
      - >
        ./scripts/sanitycheck --subset ${MATRIX_BUILD}/${MATRIX_BUILDS} ${COVERAGE} ${SANITYCHECK_OPTIONS};
        if [ "$?" != "0" ]; then
          sleep 10;
          ./scripts/sanitycheck ${COVERAGE} ${SANITYCHECK_OPTIONS_RETRY};
        fi;
      - ccache -s
    on_success:
      - rm -rf sanity-out out-2nd-pass
      - mkdir -p ../shippable/testresults
      - >
        if [ -e ./scripts/sanity_chk/last_sanity.xml ]; then
          cp ./scripts/sanity_chk/last_sanity.xml ../shippable/testresults/;
          aws s3 cp ./scripts/sanity_chk/last_sanity.xml ${S3_PATH}/sanitycheck.xml;
        fi;
    on_failure:
      - rm -rf sanity-out out-2nd-pass
      - mkdir -p ../shippable/testresults
      - >
        if [ -e ./scripts/sanity_chk/last_sanity.xml ]; then
          cp ./scripts/sanity_chk/last_sanity.xml ../shippable/testresults/;
          aws s3 cp ./scripts/sanity_chk/last_sanity.xml ${S3_PATH}/sanitycheck.xml;
        fi;

integrations:
  notifications:
    - integrationName: slack_integration
      type: slack
      recipients:
        - "#ci"
      branches:
        only:
          - master
      on_success: never
      on_failure: always
    - integrationName: email
      type: email
      recipients:
        - builds@zephyrproject.org
      branches:
        only:
          - master
          - net
          - bluetooth
          - arm
      on_success: never
      on_failure: never
